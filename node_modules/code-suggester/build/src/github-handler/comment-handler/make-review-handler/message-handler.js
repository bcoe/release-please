"use strict";
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildSummaryComment = void 0;
function hunkErrorMessage(hunk) {
    return `  * lines ${hunk.oldStart}-${hunk.oldEnd}`;
}
function fileErrorMessage(filename, hunks) {
    return `* ${filename}\n` + hunks.map(hunkErrorMessage).join('\n');
}
/**
 * Build an error message based on invalid hunks.
 * Returns an empty string if the provided hunks are empty.
 * @param invalidHunks a map of filename to hunks that are not suggestable
 */
function buildSummaryComment(invalidHunks) {
    if (invalidHunks.size === 0) {
        return '';
    }
    return ('Some suggestions could not be made:\n' +
        Array.from(invalidHunks, ([filename, hunks]) => fileErrorMessage(filename, hunks)).join('\n'));
}
exports.buildSummaryComment = buildSummaryComment;
//# sourceMappingURL=message-handler.js.map